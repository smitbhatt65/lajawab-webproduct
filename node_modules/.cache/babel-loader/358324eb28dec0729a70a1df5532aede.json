{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smitb\\\\Desktop\\\\edureka internship\\\\edureka-final-project\\\\project_final\\\\project\\\\myapp\\\\src\\\\component\\\\Search.js\";\nimport React, { Component } from 'react';\nconst locurl = \"http://localhost:8900/location\";\nconst resturl = \"http://localhost:8900/restauranthome?city=\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCity = event => {\n      this.setState({\n        restaurants: ''\n      });\n      this.setState({\n        city: event.target.value\n      });\n      var cityid = parseInt(event.target.value);\n      sessionStorage.setItem('citiId', event.target.value);\n      fetch(`${resturl}${cityid}`, {\n        method: 'GET'\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          restaurants: data\n        });\n      });\n    };\n\n    this.renderCity = data => {\n      if (data) {\n        return data.map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.city,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }\n          }, item.name);\n        });\n      }\n    };\n\n    this.renderRest = data => {\n      if (data) {\n        return data.map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }\n          }, item.name, \" | \", item.locality);\n        });\n      }\n    };\n\n    this.handleRestaurent = event => {\n      console.log(event.target.value);\n      this.props.restid(Number(event.target.value));\n    };\n\n    this.state = {\n      location: '',\n      city: '',\n      restaurants: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, this.renderCity(this.state.location)), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"restaurent\",\n      onChange: this.handleRestaurent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, this.renderRest(this.state.restaurants))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  componentDidMount() {\n    fetch(locurl, {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        location: data\n      });\n    });\n  }\n\n}\n\nexport default Search;\n/*\n {item.name} | {item.locality}\n*/","map":{"version":3,"sources":["C:/Users/smitb/Desktop/edureka internship/edureka-final-project/project_final/project/myapp/src/component/Search.js"],"names":["React","Component","locurl","resturl","Search","constructor","props","handleCity","event","setState","restaurants","city","target","value","cityid","parseInt","sessionStorage","setItem","fetch","method","then","res","json","data","renderCity","map","item","name","renderRest","_id","locality","handleRestaurent","console","log","restid","Number","state","location","render","componentDidMount"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\n\nconst locurl = \"http://localhost:8900/location\";\nconst resturl = \"http://localhost:8900/restauranthome?city=\";\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            location:'',\n            city:'',\n            restaurants:''\n        }\n    }\n\n    handleCity = (event) => {\n        this.setState({restaurants:''})\n        this.setState({city:event.target.value})\n        var cityid = parseInt(event.target.value)\n        sessionStorage.setItem('citiId',event.target.value)\n        fetch(`${resturl}${cityid}`,{method:'GET'})\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState({restaurants:data})\n        })\n    }\n\n    renderCity = (data) => {\n        if(data){\n            return data.map((item) => {\n                return(\n                    <option value={item.city}>\n                        {item.name}\n                    </option>\n                )\n            })\n        }\n    }\n\n    renderRest = (data) => {\n        if(data){\n            return data.map((item) => {\n                return(\n                    <option value={item._id}>\n                         {item.name} | {item.locality}\n                    </option>\n                )\n            })\n        }\n    }\n\n    handleRestaurent =(event) => {\n        console.log(event.target.value)\n        this.props.restid(Number(event.target.value))\n    }\n\n    render(){\n        return(\n            <header>\n                <center>\n                    <select onChange={this.handleCity}>\n                       {this.renderCity(this.state.location)}\n                    </select>\n                    {/*<input list=\"restaurent\" name=\"rests\" id=\"rests\"/>*/}\n                    <select id=\"restaurent\" onChange={this.handleRestaurent}>\n                        {this.renderRest(this.state.restaurants)}\n                    </select>\n                </center>\n                <hr/>\n            </header>\n        )\n    }\n\n    componentDidMount(){\n       fetch(locurl,{method:'GET'})\n       .then((res) => res.json())\n       .then((data) => {\n          \n           this.setState({location:data})\n       })\n    }\n    \n}\n\nexport default Search;\n\n/*\n {item.name} | {item.locality}\n*/"]},"metadata":{},"sourceType":"module"}